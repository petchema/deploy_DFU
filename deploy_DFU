#!/bin/bash
# Deploy Dagggerfall Unity and mods

# Stop if anything goes wrong
set -e

self=$(basename "$0")
version="1.2"

fatal() {
    echo "$self: $1" 1>&2
    exit 1
}

usage() {
    echo "Usage: $self [-f <config file>] <target_directory>" 1>&2
    exit 1
}

owndir=$(dirname "$0")
owndir=$(cd "$owndir" && pwd)
[ -z "$owndir" ] && fatal "can't find my own directory"

# Set defaults
SOURCEDIR="$owndir"

configfile=~/".${self}rc"

if [ "$1" = "-f" ]; then
    configfile="$2"
    shift 2
fi
[[ "$1" = "-h" || "$1" = "--help" ]] && usage

[ -n "$1" ] || usage
TARGETDIR="$1"

TEMP=$(mktemp -d)
[ -d "$TEMP" ] || fatal "Couldn't create a private temp directory"
trap "rm -rf $TEMP" EXIT

[ -e "$configfile" ] || fatal "Can't file configuration file \`$configfile'; Please use sample.${self}rc as a template"

source "$configfile"

# -- Archive names

# Base game https://www.dfworkshop.net/projects/daggerfall-unity/live-builds/
ARC_BASEGAME=interkarma-daggerfall-unity-daggerfallunity_linux_universal-131.zip

# Mods https://forums.dfworkshop.net/viewforum.php?f=27

# Daggerfall Remaster 3.0 https://forums.dfworkshop.net/viewtopic.php?f=27&t=1168
ARC_REMASTER30=Textures_3.0.rar

# Handpainted Models https://forums.dfworkshop.net/viewtopic.php?f=27&t=583
ARC_HANDPAINTEDMODELS="Handpainted models v142b.zip"

# Compass texture https://forums.dfworkshop.net/viewtopic.php?f=14&t=630
ARC_COMPASSTEXTURES=CompassTextures.7z

# Enhanced Sky https://forums.dfworkshop.net/viewtopic.php?f=14&t=29&start=40
ARC_ENHANCEDSKY=EnhancedSky_2.1.0.zip

# Distant Terrain https://forums.dfworkshop.net/viewtopic.php?f=27&t=10
ARC_DISTANTTERRAIN=DistantTerrain_2.4.2.zip

# Mountains and Hills https://forums.dfworkshop.net/viewtopic.php?f=27&t=1008
ARC_MOUNTAINSHILLS="Mountain And Hills 1.01.zip"

# Real Grass 2 https://forums.dfworkshop.net/viewtopic.php?f=27&t=964
ARC_REALGRASS=RealGrass_2.2.7z

# Harvestable Crops https://forums.dfworkshop.net/viewtopic.php?f=27&t=964
ARC_HARVESTABLECROPS=HarvestableCrops_v0.2_.7z

# Vibrant Wind https://forums.dfworkshop.net/viewtopic.php?f=14&t=532
ARC_VIBRANTWIND=VibrantWind_v0.5_.7z

# Realtime Reflections https://forums.dfworkshop.net/viewtopic.php?f=27&t=122
ARC_REALTIMEREFLECTIONS=RealtimeReflections_2.2.0.zip

# Villager Immersion Overhaul https://forums.dfworkshop.net/viewtopic.php?f=27&t=924
ARC_VILLAGERIMMERSION=VIO-V2.rar

# Post Processing Effects https://forums.dfworkshop.net/viewtopic.php?f=27&t=694
ARC_POSTPROCESSING=PostProcessing_0.3.1a_.7z

# Convenient Clock https://forums.dfworkshop.net/viewtopic.php?f=27&t=1021
ARC_CONVENIENTCLOCK="Convenient Clock 1.02.zip"

# Loading Screen https://forums.dfworkshop.net/viewtopic.php?f=27&t=469
ARC_LOADINGSCREEN=LoadingScreen_2.2_.7z
ARC_LOADINGSCREENOBLIVION=OblivionStyledLoadScreensV2.rar

# Tedious Travel https://forums.dfworkshop.net/viewtopic.php?f=22&t=1293
ARC_TEDIOUSTRAVEL=tedioustravel_0.1.0.zip

# Warm Ashes: Dangerous Dungeon Exteriors https://forums.dfworkshop.net/viewtopic.php?f=27&t=1087
ARC_WARMASHES=WarmAshesV1.1.rar

# DFU Quest Pack #1 https://forums.dfworkshop.net/viewtopic.php?f=27&t=924
ARC_QUESTPACK1GUILD=Quest_Pack_1_Guild.zip
ARC_QUESTPACK1NONGUILD=Quest_Pack_1_NonGuild.1.zip
ARC_QUESTPACK1PERPETUALS="Quest Pack 1 Perpetuals.zip"

# Quest Showcase https://forums.dfworkshop.net/viewtopic.php?f=25&t=614
ARC_QUESTSHOWCASE=Quests.zip

# Archeologists guild https://forums.dfworkshop.net/viewtopic.php?f=27&t=888&hilit=archeologists&start=80
ARC_ARCHEOLOGISTSGUILD=ArchaeologistsGuild-0.2.zip

# -- preflight checks

check_available() {
    command -v "$1" > /dev/null 2>&1 || fatal "\`$1' command not found"
}

# Use 7z for everything?
check_available unzip
check_available unrar
check_available 7z

BASEGAME=Y
missing_options=()
for archive in ${!ARC_*}; do
    option="${archive#ARC_}"
    if [ "${!option}" ]; then
	if [ "${!option}" = "Y" ]; then
	    echo "Testing \`${!archive}' presence..."
	    [ -e "$SOURCEDIR/${!archive}" ] || fatal "archive \`$SOURCEDIR/${!archive}' not found, aborting"
	fi
    else
	missing_options+=("$option")
    fi
done
[ ${#missing_options} -gt 0 ] && fatal "Your configuration file is missing options: ${missing_options[*]}"

# -- Let's go

SIGNATUREFILE="$TARGETDIR/.deploy_DFU.log"
if [ -d "$TARGETDIR" ]; then
    [ -e "$SIGNATUREFILE" ] || fatal "not replacing \`$TARGETDIR' we didn't create"
    rm -rf "$TARGETDIR"
fi
mkdir -p "$TARGETDIR"
echo "Install script: $self $version" > "$SIGNATUREFILE"

unzip "$SOURCEDIR/$ARC_BASEGAME" -d "$TARGETDIR"
echo "Base game: $ARC_BASEGAME" >> "$SIGNATUREFILE"
echo "Options: USE_HACKS=$USE_HACKS" >> "$SIGNATUREFILE"
assets="$TARGETDIR"/DaggerfallUnity_Data/StreamingAssets

# -- Eye candy

if [ "$REMASTER30" = "Y" ]; then
    unrar x "$SOURCEDIR/$ARC_REMASTER30" "$assets"/
    echo "Mod: $ARC_REMASTER30" >> "$SIGNATUREFILE"
fi

if [ "$HANDPAINTEDMODELS" = "Y" ]; then
    unzip -j "$ARC_HANDPAINTEDMODELS" -d "$assets"/Mods "${ARC_HANDPAINTEDMODELS%.zip}/StandaloneLinux/*.dfmod"
    echo "Mod: $ARC_HANDPAINTEDMODELS" >> "$SIGNATUREFILE"
fi

if [ "$COMPASSTEXTURES" = "Y" ]; then
    7z e "$ARC_COMPASSTEXTURES" "[MOD] CompassTextures/$COMPASSTEXTURE/*" -o"$assets"/Textures/Img/ -aoa
    # Those compasses have standard size
    for compassfile in "$assets"/Textures/Img/COMP{ASS,BOX}.IMG.xml; do
	[ -e "$compassfile" ] && mv "$compassfile" "$compassfile.disabled"
    done
    echo "Mod: $ARC_COMPASSTEXTURES ($COMPASSTEXTURE)" >> "$SIGNATUREFILE"
fi

if [ "$ENHANCEDSKY" = "Y" ]; then
    unzip -j "$SOURCEDIR/$ARC_ENHANCEDSKY" -d "$assets"/Mods "StandaloneLinux/enhanced sky.dfmod"
    echo "Mod: $ARC_ENHANCEDSKY" >> "$SIGNATUREFILE"
fi

if [ "$DISTANTTERRAIN" = "Y" ]; then
    unzip -j "$SOURCEDIR/$ARC_DISTANTTERRAIN" -d "$assets"/Mods "StandaloneLinux/distant terrain.dfmod"
    echo "Mod: $ARC_DISTANTTERRAIN" >> "$SIGNATUREFILE"
fi

if [ "$MOUNTAINSHILLS" = "Y" ]; then
    unzip -j "$SOURCEDIR/$ARC_MOUNTAINSHILLS" -d "$assets"/Mods "StandaloneLinux/mountains and hills.dfmod"
    echo "Mod: $ARC_MOUNTAINSHILLS" >> "$SIGNATUREFILE"
fi

if [ "$REALGRASS" = "Y" ]; then
    7z e "$SOURCEDIR/$ARC_REALGRASS" "${ARC_REALGRASS%.7z}"/Mod/Linux/realgrass.dfmod -o"$assets"/Mods/
    echo "Mod: $ARC_REALGRASS" >> "$SIGNATUREFILE"
fi

if [ "$HARVESTABLECROPS" = "Y" ]; then
    7z e "$SOURCEDIR/$ARC_HARVESTABLECROPS" "${ARC_HARVESTABLECROPS%.7z}"/Linux/harvestablecrops.dfmod -o"$assets"/Mods/
    echo "Mod: $ARC_HARVESTABLECROPS" >> "$SIGNATUREFILE"
fi

if [ "$VIBRANTWIND" = "Y" ]; then
    7z e "$SOURCEDIR/$ARC_VIBRANTWIND" "${ARC_VIBRANTWIND%.7z}"/Linux/vibrantwind.dfmod -o"$assets"/Mods/
    echo "Mod: $ARC_VIBRANTWIND" >> "$SIGNATUREFILE"
fi

if [ "$REALTIMEREFLECTIONS" = "Y" ]; then
    unzip -j "$SOURCEDIR/$ARC_REALTIMEREFLECTIONS" -d "$assets"/Mods "StandaloneLinux/realtime reflections.dfmod" 
    unzip -o "$SOURCEDIR/$ARC_REALTIMEREFLECTIONS" -d "$TEMP" RealtimeReflections_textures.zip
    unzip "$TEMP"/RealtimeReflections_textures.zip -d "$assets"/Textures
    echo "Mod: $ARC_REALTIMEREFLECTIONS" >> "$SIGNATUREFILE"
fi

if [ "$VILLAGERIMMERSION" = "Y" ]; then
    unrar x -y "$SOURCEDIR/$ARC_VILLAGERIMMERSION" "$assets"/Textures/
    echo "Mod: $ARC_VILLAGERIMMERSION" >> "$SIGNATUREFILE"
fi

if [ "$POSTPROCESSING" = "Y" ]; then
    7z e "$SOURCEDIR/$ARC_POSTPROCESSING" "${ARC_POSTPROCESSING%.7z}"/Linux/postprocessing.dfmod -o"$assets"/Mods/
    echo "Mod: $ARC_POSTPROCESSING" >> "$SIGNATUREFILE"
fi

if [ "$CONVENIENTCLOCK" = "Y" ]; then
    unzip -j "$SOURCEDIR/$ARC_CONVENIENTCLOCK" -d "$assets"/Mods "StandaloneLinux/convenient clock.dfmod"
    echo "Mod: $ARC_CONVENIENTCLOCK" >> "$SIGNATUREFILE"
fi

if [ "$LOADINGSCREEN" = "Y" ]; then
    7z x "$SOURCEDIR/$ARC_LOADINGSCREEN" -o"$TEMP" "${ARC_LOADINGSCREEN%.7z}"/StreamingAssets/Mods/LoadingScreen
    mv -v "$TEMP/${ARC_LOADINGSCREEN%.7z}"/StreamingAssets/Mods/LoadingScreen "$assets"/Mods/
    7z e "$SOURCEDIR/$ARC_LOADINGSCREEN" -o"$assets"/Mods/LoadingScreen/ "${ARC_LOADINGSCREEN%.7z}"/OS-specific/Linux/loadingscreen.dfmod
    echo "Mod: $ARC_LOADINGSCREEN" >> "$SIGNATUREFILE"

    if [ "$LOADINGSCREENOBLIVION" = "Y" ]; then
	unrar x -y "$SOURCEDIR/$ARC_LOADINGSCREENOBLIVION" "$assets"/Mods/LoadingScreen/Images/
	echo "Mod: $ARC_LOADINGSCREENOBLIVION" >> "$SIGNATUREFILE"
    fi
fi

# -- Gameplay

if [ "$TEDIOUSTRAVEL" = "Y" ]; then
    unzip -j "$SOURCEDIR/$ARC_TEDIOUSTRAVEL" -d "$assets"/Mods/ StandaloneLinux/tedioustravel.dfmod
fi

if [ "$WARMASHES" = "Y" ]; then
    unrar x "$SOURCEDIR/$ARC_WARMASHES" -o "$assets"/Quests/ WAQ01.txt WAQ02.txt WAQ03.txt WAQ04.txt
    unrar x "$SOURCEDIR/$ARC_WARMASHES" -o "$assets"/QuestPacks/ WAQ00.txt
    echo "Mod: $ARC_WARMASHES" >> "$SIGNATUREFILE"
fi

if [ "$QUESTPACK1GUILD" = "Y" ]; then
    unzip -o "$SOURCEDIR/$ARC_QUESTPACK1GUILD" -d "$assets"/QuestPacks # Should only unpack JH subdir & contents, oh well
    echo "Mod: $ARC_QUESTPACK1GUILD" >> "$SIGNATUREFILE"
fi
if [ "$QUESTPACK1NONGUILD" = "Y" ]; then
    unzip -o "$SOURCEDIR/$ARC_QUESTPACK1NONGUILD" -d "$assets"/QuestPacks # Should only unpack JH subdir & contents, oh well
    echo "Mod: $ARC_QUESTPACK1NONGUILD" >> "$SIGNATUREFILE"
fi
if [ "$QUESTPACK1PERPETUALS" = "Y" ]; then
    unzip -o "$SOURCEDIR/$ARC_QUESTPACK1PERPETUALS" -d "$assets"/QuestPacks
    echo "Mod: $ARC_QUESTPACK1PERPETUALS" >> "$SIGNATUREFILE"
fi

if [ "$QUESTSHOWCASE" = "Y" ]; then
    unzip -o "$SOURCEDIR/$ARC_QUESTSHOWCASE" -d "$TEMP"
    cp -av "$TEMP"/Quests.zip/* "$assets"/
    echo "Mod: $ARC_QUESTSHOWCASE" >> "$SIGNATUREFILE"
fi

if [ "$ARCHEOLOGISTSGUILD" = "Y" ]; then
    unzip -j "$SOURCEDIR/$ARC_ARCHEOLOGISTSGUILD" -d "$assets"/Mods/ StandaloneLinux/archaeologists.dfmod
    echo "Mod: $ARC_ARCHEOLOGISTSGUILD" >> "$SIGNATUREFILE"
fi

if [ "$USE_HACKS" = "Y" ]; then
    # https://forums.dfworkshop.net/viewtopic.php?f=27&t=1021&p=14696#p14696
    if [[ "$CONVENIENTCLOCK" = "Y" && ( -e "$assets"/Textures/Img/COMPASS.IMG.xml || -e "$assets"/Textures/Img/COMPBOX.IMG.xml ) ]]; then
	# Not compatible with resized compasses, revert to original one
	for compassfile in "$assets"/Textures/Img/COMP{ASS,BOX}.IMG.{png,xml}; do
	    [ -e "$compassfile" ] && mv "$compassfile" "$compassfile.disabled"
	done
    fi
fi

echo "Installation: successful" >> "$SIGNATUREFILE"
echo "Installed successfully under \`$TARGETDIR'"
exit 0
